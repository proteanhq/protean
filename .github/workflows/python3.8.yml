name: CI

on: [push, pull_request]

jobs:

  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:11
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        
        ports: ['5432:5432']
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      # Label used to access the service container
      redis:
        # Docker Hub image
        image: redis
        # Set health checks to wait until redis has started
        ports:
          # Maps port 6379 on service container to the host
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1

      - name: Configure sysctl limits
        run: |
          sudo swapoff -a
          sudo sysctl -w vm.swappiness=1
          sudo sysctl -w fs.file-max=262144
          sudo sysctl -w vm.max_map_count=262144

      - name: Runs Elasticsearch
        uses: elastic/elastic-github-actions/elasticsearch@master
        with:
          stack-version: 7.6.0

      - name: PSQL command
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
          PGPASSWORD: postgres
        run: psql -U postgres -h localhost -p $POSTGRES_PORT postgres -c 'create database protean_test;' && sleep 10

      # test Python 3.6
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - uses: actions/cache@v1
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          pip install codecov pre-commit && pip install .[test]
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Tests 
        run: pytest --slow --sqlite --postgresql --elasticsearch --redis --cov=protean --cov-config .coveragerc tests
        env:
            TEST_CMD: pre-commit run --all-files
            POSTGRES_PASSWORD: postgres
            POSTGRES_USER: postgres
            POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
            PGPASSWORD: postgres
            # The hostname used to communicate with the Redis service container
            REDIS_HOST: localhost
            # The default Redis port
            REDIS_PORT: ${{ job.services.redis.ports[6379] }}


      - name: CodeCOV
        run: codecov
        env:
            POSTGRES_PASSWORD: postgres
            POSTGRES_USER: postgres
            POSTGRES_PORT: ${{ job.services.postgres.ports[5432] }}
            PGPASSWORD: postgres
             # The hostname used to communicate with the Redis service container
            REDIS_HOST: localhost
            # The default Redis port
            REDIS_PORT: ${{ job.services.redis.ports[6379] }}

          