import os
import pytest


def pytest_addoption(parser):
    parser.addoption(
        "--env",
        action="store",
        default="TESTING",
        help="Config environment to run tests on",
    )


def pytest_sessionstart(session):
    """Pytest hook to run before collecting tests.

    Fetch and activate the domain by pushing the associated domain_context. The activated domain can then be referred to elsewhere as `current_domain`
    """
    os.environ["{{ package_name|upper }}_ENV"] = session.config.option.env

    from {{ package_name }}.domain import {{ package_name }}
    {{ package_name }}.domain_context().push()


@pytest.fixture(autouse=True)
def run_around_tests():
    """Fixture to automatically cleanup infrastructure after every test"""
    yield

    from protean.globals import current_domain, g

    # Clear all databases
    for _, provider in current_domain.providers.items():
        provider._data_reset()

    # Drain event stores
    current_domain.event_store.store._data_reset()
