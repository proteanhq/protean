; a generative tox configuration, see: https://tox.readthedocs.io/en/latest/config.html#generative-envlist

[tox]
envlist =
    clean,
    check,
    py37,
    report,
    docs
skip_missing_interpreters = True

[testenv]
basepython =
    {py37,docs,spell}: {env:TOXPYTHON:python3.7}
    {bootstrap,clean,check,report,coveralls,codecov}: {env:TOXPYTHON:python3}
setenv =
    PYTHONPATH={toxinidir}/tests
    PYTHONUNBUFFERED=yes
passenv =
    *
usedevelop = false
deps = -rrequirements/test.txt
commands =
    {posargs:pytest --slow --cov --cov-report=term-missing -vv tests}

[testenv:bootstrap]
deps =
    jinja2
    matrix
skip_install = true
commands =
    python ci/bootstrap.py
[testenv:spell]
setenv =
    SPELLCHECK=1
commands =
    sphinx-build -b spelling docs dist/docs
skip_install = true
deps =
    -r{toxinidir}/docs/requirements.txt
    sphinxcontrib-spelling
    pyenchant

[testenv:docs]
deps =
    -r{toxinidir}/docs/requirements.txt
commands =
    sphinx-build {posargs:-E} -b html docs dist/docs
    sphinx-build -b linkcheck docs dist/docs

[testenv:check]
deps =
    docutils
    check-manifest
    flake8
    readme-renderer
    pygments
    isort
skip_install = true
commands =
    python setup.py check --strict --metadata --restructuredtext
    check-manifest {toxinidir}
    flake8 src tests setup.py
    isort --verbose --recursive --atomic src tests setup.py

[testenv:coveralls]
deps =
    coveralls
skip_install = true
commands =
    coveralls []

[testenv:codecov]
deps =
    codecov
skip_install = true
commands =
    coverage xml --ignore-errors
    codecov []


[testenv:report]
deps = coverage
skip_install = true
commands =
    coverage combine --append
    coverage report
    coverage html

[testenv:clean]
commands = coverage erase
skip_install = true
deps = coverage

# Flake8 Configuration
[flake8]
exclude =
    .tox,
    .git,
    __pycache__,
    docs/source/conf.py,
    build,
    dist,
    tests/conftest.py,
    *.pyc,
    *.egg-info,
    .cache,
    .eggs
max-complexity = 10
import-order-style = google
application-import-names = flake8

[isort]
balanced_wrapping = True
default_section = FIRSTPARTY
forced_separate = test_protean
import_heading_firstparty = Protean
import_heading_localfolder = Local/Relative Imports
import_heading_stdlib = Standard Library Imports
import_heading_thirdparty = ThirdParty Library Imports
known_first_party = protean,tests
line_length = 119
lines_between_types = 1
not_skip = __init__.py
order_by_type = True
verbose = True
